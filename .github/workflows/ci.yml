name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"
      - run: python -m pip install --upgrade pip build wheel twine
      - run: python -m build --sdist --wheel
      - run: python -m twine check dist/*

  js-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Install Node dependencies
        run: npm ci
      - run: npm run lint:js


  js-test:
    runs-on: ubuntu-latest
    needs:
      - js-lint
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Install Node dependencies
        run: npm ci
      - run: node --test --experimental-test-coverage --test-reporter=spec --test-reporter=lcov --test-reporter-destination=stdout --test-reporter-destination=lcov.txt
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: javascript
          file: lcov.txt

  py-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lint-command:
          - bandit -r . -x ./tests
          - black --check --diff .
          - flake8 .
          - isort --check-only --diff .
          - pydocstyle .
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"
          cache: 'pip'
          cache-dependency-path: 'linter-requirements.txt'
      - run: python -m pip install -r linter-requirements.txt
      - run: ${{ matrix.lint-command }}

  pytest:
    needs:
      - py-lint
      - dist
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"
        django-version:
          - "4.2"
          - "5.0"
          - "5.1"
    steps:
    - uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Chrome
      run: |
        sudo apt update
        sudo apt install -y google-chrome-stable
    - name: Install Selenium
      run: |
        mkdir bin
        curl -qO "https://chromedriver.storage.googleapis.com/$(curl -q https://chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip -d bin

    - run: python -m pip install .[test]
    - run: python -m pip install django~=${{ matrix.django-version }}.0
    - run: python -m pytest -m "not selenium"
      env:
        PATH: $PATH:$(pwd)/bin
    - uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: python


  selenium:
    needs:
      - pytest
    strategy:
      matrix:
        python-version:
          - "3.x"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install Chrome
        run: sudo apt-get install -y google-chrome-stable
      - name: Install Selenium
        run: |
          mkdir bin
          curl -O https://chromedriver.storage.googleapis.com/`curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip -d bin
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -e .[test]
      - run: python -m pytest -m selenium
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: selenium


  analyze:
    name: CodeQL Analyze
    needs:
      - pytest
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ javascript, python ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
        if: ${{ matrix.language == 'javascript' || matrix.language == 'python' }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
