name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2.2.2
      - run: python -m pip install --upgrade pip setuptools wheel twine readme-renderer
      - uses: actions/checkout@v2.3.5
      - run: python setup.py sdist bdist_wheel
      - run: python -m twine check dist/*

  standardjs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: '14.x'
      - uses: actions/checkout@v2.3.5
      - id: cache-npm
        uses: actions/cache@v2.1.6
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Node dependencies
        run: npm ci
      - run: npm run lint:js

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lint-command:
          - bandit -r . -x ./tests
          - black --check --diff .
          - flake8 .
          - isort --check-only --diff .
          - pydocstyle .
    steps:
      - uses: actions/setup-python@v2.2.2
      - uses: actions/checkout@v2.3.5
      - uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('linter-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: python -m pip install -r linter-requirements.txt
      - run: ${{ matrix.lint-command }}

  pytest:
    needs:
      - lint
      - standardjs
      - dist
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
        django-version:
          - "2.2"
          - "3.1"
          - "3.2"
    steps:
    - uses: actions/checkout@v2.3.5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Chrome
      run: |
        sudo apt update
        sudo apt install -y google-chrome-stable
    - name: Install Selenium
      run: |
        mkdir bin
        curl -qO "https://chromedriver.storage.googleapis.com/$(curl -q https://chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip -d bin
    - name: Upgrade Python setuptools
      run: python -m pip install --upgrade pip setuptools wheel codecov
    - name: Install Django version ${{ matrix.django-version }}
      run: python -m pip install django~=${{ matrix.django-version }}
    - name: Run tests
      run: PATH=$PATH:$(pwd)/bin python setup.py test
    - run: codecov
      env:
        CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
